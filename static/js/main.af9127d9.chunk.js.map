{"version":3,"sources":["components/TempApp.js","App.js","reportWebVitals.js","index.js"],"names":["TempApp","useState","city","setCity","search","setSearch","useEffect","a","url","fetch","response","json","responsejson","console","log","main","fetchApi","className","type","value","placeholder","onChange","event","target","temp","temp_min","temp_max","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sRA2DeA,EAxDC,WAAO,IAAD,EACMC,mBAAS,MADf,mBACXC,EADW,KACLC,EADK,OAEUF,mBAAS,WAFnB,mBAEXG,EAFW,KAEHC,EAFG,KAgBlB,OAZAC,qBAAU,YACQ,uCAAG,gCAAAC,EAAA,6DACPC,EADO,4DACoDJ,EADpD,iEAEUK,MAAMD,GAFhB,cAEPE,EAFO,gBAIcA,EAASC,OAJvB,OAIPC,EAJO,OAKbC,QAAQC,IAAIF,GACZT,EAAQS,EAAaG,MANR,2CAAH,qDASdC,KACF,CAACZ,IAEC,mCACI,sBAAKa,UAAU,MAAf,UACI,qBAAKA,UAAU,YAAf,SACI,uBACIC,KAAK,SACLC,MAAOf,EACPa,UAAU,aACVG,YAAY,YACZC,SAAU,SAACC,GAAYjB,EAAUiB,EAAMC,OAAOJ,YAGrDjB,EAGD,qCACA,sBAAKe,UAAU,OAAf,UACA,qBAAIA,UAAU,WAAd,UACI,mBAAGA,UAAU,uBAA0Bb,KAE3C,qBAAIa,UAAU,OAAd,UACGf,EAAKsB,KADR,aAGA,qBAAIP,UAAU,cAAd,mBACUf,EAAKuB,SADf,oBACuCvB,EAAKwB,SAD5C,gBAIJ,qBAAKT,UAAU,cACf,qBAAKA,UAAU,cACf,qBAAKA,UAAU,mBAhBP,mBAAGA,UAAU,SAAb,mCCpBLU,MARf,WACE,OACM,mCACI,cAAC,EAAD,OCKGC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.af9127d9.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport \"./css/style.css\";\n\nconst TempApp = () => {\n    const [city, setCity] = useState(null);\n    const [search, setSearch] = useState(\"Kolkata\");\n\n    useEffect(() => {\n        const fetchApi = async () => { // returning promise. \n            const url = `https://api.openweathermap.org/data/2.5/weather?q=${search}&units=metric&appid=dbe7ec7fd358d632555d8a6d51fb087d`;\n            const response = await fetch(url); // either pass or fail --> as promise\n            //console.log(response);\n            const responsejson = await response.json(); \n            console.log(responsejson);\n            setCity(responsejson.main);\n        }\n\n        fetchApi();\n    },[search])\n    return(\n        <>\n            <div className=\"box\">\n                <div className=\"inputData\">\n                    <input\n                        type=\"search\"\n                        value={search}\n                        className=\"inputFeild\"\n                        placeholder=\"City name\"\n                        onChange={(event) => { setSearch(event.target.value) }} />\n                </div>\n            {\n                !city ? (\n                    <p className=\"noData\"> No Data Found!</p>\n                ) : (\n                <>\n                <div className=\"info\">\n                <h2 className=\"location\">\n                    <i className=\"fas fa-street-view\"></i>{search}\n                </h2>\n                <h1 className=\"temp\">\n                  {city.temp}°Cel     \n                </h1>\n                <h3 className=\"tempmin_max\">\n                   Min : {city.temp_min}°Cel || Max : {city.temp_max}°Cel \n                </h3>\n            </div>\n            <div className=\"wave -one\"></div>\n            <div className=\"wave -two\"></div>\n            <div className=\"wave -three\"></div>\n            </>\n                )\n            }\n            \n            \n        </div>\n        </>\n    );\n}\n\nexport default TempApp;","import React from 'react';\nimport './App.css';\nimport TempApp from './components/TempApp';\n\nfunction App() {\n  return (\n        <>\n            <TempApp />\n        </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}